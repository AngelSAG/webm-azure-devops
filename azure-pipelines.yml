variables:
  dockerComposeService: 'microservices-runtime'
  gitProject: 'https://github.com/YanaSimeonova/webmethods-sample-project-layout.git'
  dockerRegistryConnection: 'az-reg-sc-01'
  dockerRegistry: 'letswebmacr.azurecr.io/ccdevops'
 # image: '$(Build.DefinitionName)'
  image: 'pcmsr'
  baseDockerRegistryConnection: 'dockehub'
  testDir: './containers/microservices-runtime/webmethods-sample-project-layout/assets/IS/Tests'
  projectName: 'webmethods-sample-project-layout'
  testProperties: ' -DtestISHost=localhost -DtestObject=$(dockerComposeService) -DtestISPort=5555 -DtestISUsername=Administrator -DtestISPassword=manage -DprojectName=$(projectName) -DtestDir=$(testDir)'
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    cd containers/$(dockerComposeService)
    git clone $(gitProject)
  displayName: 'Clone asset repo'

- task: Docker@2
  inputs:
    containerRegistry: '$(baseDockerRegistryConnection)'
    command: 'login'
  displayName: 'Docker login'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
        # Write your commands here
        sleep 10
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '$(Build.SourcesDirectory)/containers/docker-compose.yml'
    dockerComposeFileArgs: 'LOCAL_REG=$(dockerRegistry) IMAGE=$(image)'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
    arguments: '$(dockerComposeService)'
  displayName: 'Build'  

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '$(Build.SourcesDirectory)/containers/docker-compose.yml'
    dockerComposeFileArgs: 'LOCAL_REG=$(dockerRegistry) IMAGE=$(image)'
    action: 'Run services'
    buildImages: false
    arguments: '$(dockerComposeService)'
  displayName: 'Run'    

- task: Ant@1
  inputs:
      buildFile: 'build.xml'
      options: '$(testProperties)'
      targets: 'test'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
  displayName: 'Test'
  
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: '$(dockerRegistryConnection)'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: 'LOCAL_REG=$(dockerRegistry) IMAGE=$(image)'
    action: 'Push services'
  displayName: 'Push' 
