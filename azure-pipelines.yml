# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#resources:
#  repositories:
#  - repository: assetRepo # The name used to reference this repository in the checkout step
#    type: github
#    endpoint: YanaSimeonova
#    name: YanaSimeonova/webmethods-sample-project-layout

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
#- checkout:  assetRepo
#- checkout:  self
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    cd containers/microservices-runtime
    git clone https://github.com/YanaSimeonova/webmethods-sample-project-layout.git
    ls -la
    pwd
    echo Add other tasks to build, test, and deploy your project.
    #cat $BUILD_SOURCESDIRECTORY/*/containers/docker-compose.yml
  displayName: 'Run a multi-line script'

- task: Docker@2
  inputs:
    containerRegistry: 'dockehub'
    command: 'login'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '$(Build.SourcesDirectory)/containers/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'config'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '$(Build.SourcesDirectory)/containers/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
    arguments: 'microservices-runtime'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '$(Build.SourcesDirectory)/containers/docker-compose.yml'
    action: 'Run services'
    buildImages: false
    arguments: 'microservices-runtime'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      docker ps 
      until curl -u Administrator:manage -s http://`hostname`:5555/ 
      do 
        sleep 5
      done